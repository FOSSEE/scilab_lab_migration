<?php
// $Id$

require_once('general.inc');
require_once('general_deletion.inc');
require_once('email.inc');

/**
 * Implementation of hook_menu().
 */
function lab_migration_menu()
{
  $items = array();

  $items['lab_migration/proposal'] = array(
    'title' => 'Lab Migration Proposal',
    'description' => 'Lab Migration Proposal', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lab_migration_proposal_form'),
    'access arguments' => array('create proposal'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'proposal.inc',
  );

  /* PROPOSAL */
  $items['lab_migration/manage_proposal'] = array(
    'title' => 'Manage Lab Migration',
    'description' => 'Manage Lab Migration Proposals',
    'page callback' => '_proposal_pending',
    'access callback' => 'user_access',
    'access arguments' => array('manage proposal'),
    'file' => 'manage_proposal.inc',
  );
  $items['lab_migration/manage_proposal/pending'] = array(
    'title' => 'Pending Proposals',
    'description' => 'Pending Lab Migration Proposals Queue',
    'page callback' => '_proposal_pending',
    'access callback' => 'user_access',
    'access arguments' => array('manage proposal'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
    'file' => 'manage_proposal.inc',
  );
  $items['lab_migration/manage_proposal/pending_solution'] = array(
    'title' => 'Pending Solution',
    'description' => 'Pending Lab Migration Solution',
    'page callback' => '_proposal_pending_solution',
    'access callback' => 'user_access',
    'access arguments' => array('manage proposal'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
    'file' => 'manage_proposal.inc',
  );
  $items['lab_migration/manage_proposal/all'] = array(
    'title' => 'All Proposals',
    'description' => 'All Proposals',
    'page callback' => '_proposal_all',
    'access callback' => 'user_access',
    'access arguments' => array('manage proposal'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 3,
    'file' => 'manage_proposal.inc',
  );
  $items['lab_migration/manage_proposal/category'] = array(
    'title' => 'Category',
    'description' => 'Category',
    'page callback' => '_category_all',
    'access callback' => 'user_access',
    'access arguments' => array('manage proposal'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 4,
    'file' => 'manage_proposal.inc',
  );
  $items['lab_migration/manage_proposal/category/edit'] = array(
    'title' => 'Edit Category',
    'description' => 'Edit category',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('category_edit_form'),
    'access arguments' => array('edit proposal'),
    'type' => MENU_CALLBACK,
    'file' => 'manage_proposal.inc',
  );
  $items['lab_migration/manage_proposal/approve'] = array(
    'title' => 'Approve Proposal',
    'description' => 'Approve Proposal',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('proposal_approval_form'),
    'access arguments' => array('manage proposal'),
    'type' => MENU_CALLBACK,
    'file' => 'manage_proposal.inc',
  );
  $items['lab_migration/manage_proposal/edit'] = array(
    'title' => 'Edit Proposal',
    'description' => 'Edit Proposal',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('proposal_edit_form'),
    'access arguments' => array('manage proposal'),
    'type' => MENU_CALLBACK,
    'file' => 'manage_proposal.inc',
  );
  $items['lab_migration/manage_proposal/status'] = array(
    'title' => 'Proposal Status',
    'description' => 'Proposal Status',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('proposal_status_form'),
    'access arguments' => array('approve proposal'),
    'type' => MENU_CALLBACK,
    'file' => 'manage_proposal.inc',
  );

  /* CODE REVIEW */
  $items['lab_migration/code_approval'] = array(
    'title' => 'Manage Code Approval',
    'description' => 'Manage Code Approval',
    'page callback' => 'code_approval',
    'access arguments' => array('approve code'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'code_approval.inc',
  );
  $items['lab_migration/code_approval/approve'] = array(
    'title' => 'Code Approval',
    'description' => 'Code Approval',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('code_approval_form'),
    'access arguments' => array('approve code'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
    'file' => 'code_approval.inc',
  );
  $items['lab_migration/code_approval/bulk'] = array(
    'title' => 'Bulk Manage',
    'description' => 'Bulk Mangage',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bulk_approval_form'),
    'access arguments' => array('bulk manage code'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
    'file' => 'bulk_approval.inc',
  );
  $items['lab_migration/code_approval/editcode'] = array(
    'title' => 'Admin Edit Example',
    'description' => 'Admin Edit Example',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('upload_examples_admin_edit_form'),
    'access arguments' => array('approve code'),
    'type' => MENU_CALLBACK,
    'weight' => 3,
    'file' => 'editcodeadmin.inc',
  );
  $items['lab_migration/code_approval/notes'] = array(
    'title' => 'Notes for Reviewers',
    'description' => 'Notes for Reviewers',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lab_notes_form'),
    'access arguments' => array('bulk manage code'),
    'type' => MENU_CALLBACK,
    'weight' => 4,
    'file' => 'notes.inc',
  );

  /* ADMIN SETTINGS */
  $items['admin/settings/lab_migration'] = array(
    'title' => 'Lab Migration Settings',
    'description' => 'Lab Migration Settings', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lab_migration_settings_form'),
    'access arguments' => array('administer lab migration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'settings.inc',
  );

  /* CODE UPLOAD */
  $items['lab_migration/code'] = array(
    'title' => 'Code Submission',
    'description' => 'Code Submission',
    'page callback' => 'list_experiments',
    'access callback' => 'user_access',
    'access arguments' => array('upload code'),
    'file' => 'upload_code.inc',
  );
  $items['lab_migration/code/list_experiments'] = array(
    'title' => 'List Experiments',
    'description' => 'List Experiments', 
    'page callback' => 'list_experiments',
    'access arguments' => array('upload code'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'upload_code.inc',
    'weight' => 1,
  );
  $items['lab_migration/code/upload'] = array(
    'title' => 'Code Submission',
    'description' => 'Code Submission',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('upload_code_form'),
    'access arguments' => array('upload code'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'upload_code.inc',
    'weight' => 2,
  );
  $items['lab_migration/code/upload_dep'] = array(
    'title' => 'Upload Dependency',
    'description' => 'Upload Dependency Files',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('upload_dependency_form'),
    'access arguments' => array('upload code'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'dependency.inc',
    'weight' => 3,
  );
  $items['lab_migration/code/edit'] = array(
    'title' => 'Edit Example',
    'description' => 'Edit Example', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('upload_examples_edit_form'),
    'access arguments' => array('edit uploaded code'),
    'type' => MENU_CALLBACK,
    'file' => 'editcode.inc',
  );
  $items['lab_migration/code/delete'] = array(
    'title' => 'Delete Example',
    'description' => 'Delete Example', 
    'page callback' => 'upload_code_delete',
    'access arguments' => array('upload code'),
    'type' => MENU_CALLBACK,
    'file' => 'upload_code_delete.inc',
  );

  /* CODE DOWNLOADS */
  $items['lab_migration/download/file'] = array(
    'title' => 'Code Download',
    'description' => 'Code Download', 
    'page callback' => 'lab_migration_download_solution_file',
    'access arguments' => array('download code'),
    'type' => MENU_CALLBACK,
    'file' => 'download.inc',
  );
  $items['lab_migration/download/dependency'] = array(
    'title' => 'Code Download',
    'description' => 'Code Download', 
    'page callback' => 'lab_migration_download_dependency_file',
    'access arguments' => array('download code'),
    'type' => MENU_CALLBACK,
    'file' => 'download.inc',
  );
  $items['lab_migration/download/solution'] = array(
    'title' => 'Code Download',
    'description' => 'Code Download', 
    'page callback' => 'lab_migration_download_solution',
    'access arguments' => array('download code'),
    'type' => MENU_CALLBACK,
    'file' => 'download.inc',
  );
  $items['lab_migration/download/experiment'] = array(
    'title' => 'Code Download',
    'description' => 'Code Download', 
    'page callback' => 'lab_migration_download_experiment',
    'access arguments' => array('download code'),
    'type' => MENU_CALLBACK,
    'file' => 'download.inc',
  );
  $items['lab_migration/download/lab'] = array(
    'title' => 'Code Download',
    'description' => 'Code Download', 
    'page callback' => 'lab_migration_download_lab',
    'access arguments' => array('download code'),
    'type' => MENU_CALLBACK,
    'file' => 'download.inc',
  );
  $items['lab_migration/full_download/experiment'] = array(
    'title' => 'Code Download',
    'description' => 'Code Download', 
    'page callback' => 'lab_migration_download_full_experiment',
    'access arguments' => array('approve code'),
    'type' => MENU_CALLBACK,
    'file' => 'full_download.inc',
  );
  $items['lab_migration/full_download/lab'] = array(
    'title' => 'Code Download',
    'description' => 'Code Download', 
    'page callback' => 'lab_migration_download_full_lab',
    'access arguments' => array('approve code'),
    'type' => MENU_CALLBACK,
    'file' => 'full_download.inc',
  );

  /* latex script for lab generation */
  $items['lab_migration/generate_lab'] = array(
    'title' => 'Generate Lab',
    'description' => 'Generate Lab From Latex Script', 
    'page callback' => 'lab_migration_download_lab_pdf',
    'access arguments' => array('generate lab'),
    'type' => MENU_CALLBACK,
    'file' => 'latex.inc',
  );
  $items['lab_migration/delete_lab'] = array(
    'title' => 'Delete Lab PDF',
    'description' => 'Delete Lab PDF', 
    'page callback' => 'lab_migration_delete_lab_pdf',
    'access arguments' => array('approve code'),
    'type' => MENU_CALLBACK,
    'file' => 'latex.inc',
  );

  /* DOWNLOAD FOR EVERYONE */
  $items['lab_migration_run'] = array(
    'title' => 'Download Codes',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lab_migration_run_form'),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'run.inc',
  );

  return $items;
}

/**
 * Implementation of hook_perm().
 */
function lab_migration_perm() {
  return array('create proposal', 'approve proposal', 'approve code', 'upload code', 'edit uploaded code', 'download code', 'create feedback', 'bulk manage code', 'bulk delete code', 'edit proposal', 'administer lab migration', 'generate lab');
}

/* AJAX CALLS */
function lab_migration_ajax()
{
  $query_type = arg(2);
  if ($query_type == 'chapter_title')
  {
    $chapter_number = arg(3);
    $preference_id = arg(4);
    $chapter_q = db_query("SELECT * FROM {lab_migration_chapter} WHERE number = %d AND preference_id = %d LIMIT 1", $chapter_number, $preference_id);
    if ($chapter_data = db_fetch_object($chapter_q))
    {
      echo $chapter_data->name;
      return;
    }
  } else if ($query_type == 'example_exists') {
    $chapter_number = arg(3);
    $preference_id = arg(4);
    $example_number = arg(5);

    $chapter_id = 0;
    $chapter_q = db_query("SELECT * FROM {lab_migration_chapter} WHERE number = %d AND preference_id = %d LIMIT 1", $chapter_number, $preference_id);
    if (!$chapter_data = db_fetch_object($chapter_q))
    {
      echo '';
      return;
    } else {
      $chapter_id = $chapter_data->id;
    }

    $example_q = db_query("SELECT * FROM {lab_migration_example} WHERE chapter_id = %d AND number = '%s' LIMIT 1", $chapter_id, $example_number);
    if ($example_data = db_fetch_object($example_q))
    {
      if ($example_data->approval_status == 1)
        echo 'Warning! Example already approved. You cannot upload the same example again.';
      else
        echo 'Warning! Example already uploaded. Delete the example and reupload it.';
      return;
    }
  }
  echo '';
}

/*************************** VALIDATION FUNCTIONS *****************************/

function lab_migration_check_valid_filename($file_name) {
  if (!preg_match('/^[0-9a-zA-Z\_\.]+$/', $file_name))
    return FALSE;
  else
    if (substr_count($file_name, ".") > 1)
      return FALSE;
    else
      return TRUE;
}

function check_name($name = '') {
  if (!preg_match('/^[0-9a-zA-Z\ ]+$/', $name))
    return FALSE;
  else
    return TRUE;
}

function check_code_number($number = '') {
  if (!preg_match('/^[0-9]+$/', $number))
    return FALSE;
  else
    return TRUE;
}

function lab_migration_path() {
  return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'lab_migration/uploads/';
}

/************************* USER VERIFICATION FUNCTIONS ************************/

function get_proposal() {
	global $user;

  $proposal_q = db_query("SELECT * FROM {lab_migration_proposal} WHERE uid = %d ORDER BY id DESC LIMIT 1", $user->uid);
  $proposal_data = db_fetch_object($proposal_q);
  if (!$proposal_data)
  {
    drupal_set_message("Please submit a " . l('proposal', 'lab_migration/proposal') . ".", 'error');
    drupal_goto('');
  }
  if ($proposal_data->proposal_status != 1)
  {
    switch ($proposal_data->approval_status)
    {
    case 0:
      drupal_set_message(t('We have already received your proposal. We will get back to you soon.'), 'status');
      return FALSE;
    case 1:
      return $proposal_data;
    case 2:
      drupal_set_message(t('Your proposal has been dis-approved. Please create another proposal ' . l('here', 'lab_migration/proposal') . '.'), 'error');
      return FALSE;
    case 3:
      drupal_set_message(t('Congratulations! You have completed your last book proposal. You have to create another proposal ' . l('here', 'lab_migration/proposal') . '.'), 'status');
      return FALSE;
    default:
       drupal_set_message(t('Invalid proposal state. Please contact site administrator for further information.'), 'error');
       return FALSE;
    }
  }
  return FALSE;
}

